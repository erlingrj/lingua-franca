target Codesign {
    timeout: 14 msec
}

// A counter where we can update the increment
reactor Fpga {
    @array(length=1024)
    input in: {=UInt(32.W)=}

    @array(length=1024)
    output out: {=UInt(32.W)=}

    reaction(in) -> out {=
        
        printf("Got inc=%d\n", lf_get(in))
        lf_write(inc, lf_get(in))
    =}

}

reactor Sw {
    input in: uint32_t[1024]
    output out: uint32_t[1024]

    logical action a

    reaction(startup) -> a, out {=
        out.set(2);
        a.schedule(10ms);
    =}

    reaction(a) -> out {=
        out.set(4);
    =}

    reaction(in) {=
        std::cout <<"Got: " <<*in.get() <<" @ " <<get_elapsed_logical_time() <<std::endl;
    =}
}


main reactor {
    @fpga
    fpga = new Fpga()

    sw = new Sw()

    sw.out, fpga.out -> fpga.in, sw.in
}

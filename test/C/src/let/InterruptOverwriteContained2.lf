
/* Verify that interrupt reactions are stalled when LET is executing*/
target C {
    scheduler: LET,
    workers: 2,
    timeout: 200 msec
};


reactor Let {
    state r1_executing:bool(false)
    logical action let(50 msec): int
    input in:int

    @let
    reaction(in) -> let {=
        int in_start = in->value;
        instant_t physical_time = lf_time_physical();
        
        while (lf_time_physical() < physical_time + MSEC(50)) {
            // Do nothing.
        }

        if (in->value != in_start) {
            lf_print_error_and_exit("Interrupting overwriting reaction not stalled");
        }
        lf_schedule_int(let, 0, 42);
    =}

    reaction(let) {= =}
}

reactor Interrupting {
    timer t (10 msec, 10 msec)
    state i:int(0);

    let = new Let()


    reaction(t) -> let.in {=
        lf_set(let.in, ++self->i);
    =} 




}
main reactor {
    i = new Interrupting()
}
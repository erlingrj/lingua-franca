/* Verify that interrupt reactions are stalled when LET is executing*/
target C {
    scheduler: LET,
    workers: 2,
    timeout: 2 msec,
};


reactor Source {
    output out:int

    reaction(startup) -> out {= lf_set(out, 1); =}
    reaction(shutdown) {= =}
}

reactor Let {
    input in:int
    logical action let(50 msec): int

    @let
    reaction(in) -> let {=
        int in_start = in->value;
        instant_t physical_time = lf_time_physical();
        
        while (lf_time_physical() < physical_time + MSEC(50)) {
            // Do nothing.
        }

        
        if (in->value != in_start) {
            lf_print_error_and_exit("Interrupting overwriting reaction not stalled");
        }
        if (!in->is_present) {
            lf_print_error_and_exit("Trigger not present at end");
        }

        lf_schedule_int(let, 0, 42);
    =}

    reaction(let) {= =}

    reaction(shutdown) {= =}
}

main reactor {
    src = new Source()
    let = new Let()
    src.out -> let.in
}
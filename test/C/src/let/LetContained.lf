target C {
    timeout: 1 sec
}

reactor Source{
    timer t(0, 100 msec)
    output o:int
    reaction(t) -> o {=
        static int i = 0;
        lf_set(o, i++);
    =}
}


reactor Let {
    mutable input in:int
    logical action let(50 msec): int

    @let
    reaction(in) -> let {=
        int in_start = in->value;
        instant_t physical_time = lf_time_physical();
        
        while (lf_time_physical() < physical_time + MSEC(50)) {
            // Do nothing.
        }

        if (in->value != in_start) {
            lf_print_error_and_exit("Interrupting overwriting reaction not stalled");
        }
        lf_schedule_int(let, 0, 42);
    =}

    reaction(let) {= =}
}

main reactor {
    s = new Source()
    l = new Let()
    s.o ->l.in 
}